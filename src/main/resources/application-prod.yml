# yaml(*.yml)
#     yet another markup language
#     가벼운 마크업 언어로 사용
#
# 기본 문법
#   # 는 주석
#   기본표현
#      key: value     <- : 다음에는 반드시 공백문자가 와야 함
#
#   key:
#       key_1:
#           key_2:
#               key_3:
#                   ..

# 포트번호출력
server:
 port: 80

spring:
  application:
    name: KBoard


  # Thymeleaf 설정
  thymeleaf:
    cache: false
    prefix: classpath:templates/views/


  # datasource 설정
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${rds.hostname}:${rds.port}/${rds.db.name}?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    username: ${rds.username}
    password: ${rds.password}

  # security 설정 (안 돼서 주석처리)
  security:
#    user:
#      name: user
#      password: 1234
    oauth2:       # kakao 처럼 맘대로 하면 안 되고 정해진 대로 해야함.
      client:
        registration:
          google:
            client-id: aaaa
            client-secret: aaaa
            scope:      # 어떤 정보를 가져올 것인지
              - email
              - profile
  # 구글 로그인 이미지 링크 : https://developers.google.com/identity/branding-guidelines?hl=ko

          facebook:
            client-id: bbbb    # 앱아이디
            client-secret: bbbb   # 앱 시크릿 코드
            scope:      # 접근권한
              - email
              - public_profile    # 개발자문서에 정의되어 있는 값으로 넣어야함

          naver:
            client-id: cccc
            client-secret: cccc
            scope:
              - name
              - email
            client-name: Naver
            authorization-grant-type: authorization_code      # 인증 방식
            redirect-uri: ccccc

        # provider 제공 (Custom Provider 설정 방법)
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response     # naver 는 json 파일에서 response 안에 정보들이 있기 때문에 명시해줘야함


# MyBatis 매퍼(mapper) 파일 위치 설정
# src/main/resources 이하의 경로 지정
mybatis:
  mapper-locations: classpath:mapper/**/*.xml

app:
  # 페이징 관련 세팅값
  pagination:
    write_pages: 10    # 한 페이징당 몇 개의 페이지를 표시할 것인지
    page_rows: 10     # 한 '페이지'에 몇개의 글을 리스트 할 것인지

  # 파일 업로드 경로
  upload:
    path: upload

  # OAuth2
  oauth2:

    password: 1234    # oauth2 인증한 회원에 대한 전용 패스워드, 보안 주의!

    # kakao 로그인 관련 세팅 값
    kakao:
      client-id: ddddd   # REST Api 키
      redirect_uri: dddd   # Redirect URI
      token-uri: https://kauth.kakao.com/oauth/token   # access token 발급 받기 위한 URI
      user-info-uri: https://kapi.kakao.com/v2/user/me	  # 사용자 profile 요청 URI
